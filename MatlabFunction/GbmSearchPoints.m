%% ========================================================================
%  File: GbmSearchPoints.m
%  Name: I Yun Su
%  Date: 2021.06.01
%  Note:
%        Generate gbm results according the ppd generated by
%        GenSearchPoints.m
%        Source Depth: Hydrophon Depth
%        Receiver Depth: Bottom
%
%% ========================================================================
clear all;clc
%% Set Param
path_results = '/home/iyunsu/gbm/Example_121.2_22.08/FRLocation/37500_Corr';
path_output = '/home/iyunsu/gbm/Example_121.2_22.08/GbmSearchPoints/37500';
path_func = '/home/iyunsu/gbm/SimFunction/';
addpath (path_func);
guessPoint = [121.19 22.065];
%% Load File
cd (path_func);
load taidb500.mat
load sediment.mat
%% Load PPD results

cd (path_results);
zrDepthFileName = dir('PD*results.mat')

for ii = 1:1%length(zrDepthFileName)
    split = regexp(zrDepthFileName(ii).name, 'r', 'split');
    zrDepth = str2num(split{1}(3:end));
    cd (path_results);
    load(['PD',num2str(zrDepth),'results.mat'])
    lon = xdetected;
    lat = ydetected;
    %% Gbm
    for ipt = 4:length(lat)
        %% Set Path
        cd(path_output)
        newFolderName = [num2str(lon(ipt)),'_',num2str(lat(ipt)),'_',num2str(zrDepth),'m'];
        mkdir(newFolderName);
        cd(newFolderName);
        path_outputAz = pwd;
        
        %% Set Param for Gbm
        Source = [lon(ipt) lat(ipt)];
        slat = Source(2);
        slon = Source(1);
        SetParam.fre = 37500;             % Source Frequency (Hz)
        SetParam.bandwidth = 1000;      % Source Frequency bandwidth
        azNumber = 16;
        SL = 160;
        
        
        isdep = 'flase';
        SetParam.rdr = 10;          % Reciever distance spacing (TL.out)
        SetParam.cdr = SetParam.rdr;
        SetParam.rmax = 5000;
        rmaxLarge = SetParam.rmax;
        SetParam.m = 7;                  % month
        
        SetParam.zr = 150;               % Receiver Depth (m)
        SetParam.zs = zrDepth;
        SetParam.ds = 10;                
        SetParam.dz = 10;                
        
        SetParam.bathdr = 100;            % substrate spacing
        SetParam.the1 = -89.5;
        SetParam.the2 = 88.5;
        SetParam.thei = 1;
         
        %% Calcualte Param --------------------------------------------------------
        
        % The corrdinate of the rmax/rdr
        [coordLat, coordLon] = GenMultiAzCoord(slat,slon,azNumber,SetParam.rmax,SetParam.rdr);
        
        %%
        for iaz =1:azNumber
            % Set Path
            cd(path_outputAz);
            subfolderName = ['AZ' num2str(iaz)]
            mkdir(subfolderName)
            cd (subfolderName)
            % Get Depth
            SetParam.depth = -interp2(X,Y,Z,coordLon(iaz,:),coordLat(iaz,:)); % depth from source to receiver (per rdr)
            tempDepth = SetParam.depth;
            SetParam.cz1 = fix(min(SetParam.depth));
            SetParam.cz2 = fix(max(SetParam.depth))+1;
            SetParam.cdz = 1;
            
            % Get Sediment data
            for i = 1:1%:length(coordLon(1,:))
                [~,n_lon(i)]=(min(abs(sed_lon-coordLon(iaz,i))));
                [~,n_lat(i)]=(min(abs(sed_lat-coordLat(iaz,i))));
                sed_s(i) = sed_index(n_lat(i),n_lon(i));
                switch sed_s(i)
                    case 1
                        SetParam.Mz(i) = -4;
                    case 2
                        SetParam.Mz(i) = -3;
                    case 3
                        SetParam.Mz(i) = -2;
                    case 4
                        SetParam.Mz(i) = 0.92;
                    case 5
                        SetParam.Mz(i) = 5.4;
                    case 6,1
                        SetParam.Mz(i) = 9.5;
                end
            end
            
            % Get SSP
            ssp_head = [0:2:10 15:5:100 110:10:200 220:20:300 350 400:100:1500 1600:200:6600]';
            SSP = [ssp_head];
            
            for i = 1:1%length(coordLon(1,:))
                ssp=Extract(coordLon(iaz,i),coordLat(iaz,i),SetParam.m);        % The number is the month (Extraxt is the function)
                SSP(1:length(ssp),i+1)=ssp(:,4);
                T = interp1(ssp(:,1),ssp(:,2),SetParam.depth(i),'linear');
                Vw = interp1(ssp(:,1),ssp(:,4),SetParam.depth(i),'linear');
                
                % run GA.m
                [SetParam.cb(i),SetParam.thob(i),SetParam.alphab(i)]=GA_iys(SetParam.Mz(i), SetParam.depth(i), T, Vw);
            end
            
            SetParam.zmax = SSP(length(ssp),1)+1000;            % max depth culafor calting the TL (Larger than SSP depth)
            %% Generate .in file for 5 km

            % run gbm.exe
            copyfile([path_func 'Gbm.exe'],[path_outputAz, '/' ,subfolderName])
            copyfile([path_func 'gbm.sh'],[path_outputAz, '/' ,subfolderName])
            GenInFile(SetParam,SSP,'false',pwd)
            system(['sh gbm.sh']);
            copyfile TL.OUT TL5km.OUT
            copyfile TL.GRID TL5km.GRID
            copyfile Gbm.in Gbm5km.in
            delete TL.OUT TL.GRID Gbm.in TRACE.OUT SSP_INPUT.IN PQ.OUT KNOTS.OUT GA.out CHECK.SSP BATHY.OUT
            
            %% Gen .in file in 1 km 
%             % Set Param for 1 km
%             SetParam.rmax = 1000;
%             SetParam.ds = 5;
%             SetParam.dz = 5;
%             SetParam.depth = -interp2(X,Y,Z,coordLon(iaz,1:SetParam.rmax/SetParam.rdr+1),coordLat(iaz,1:SetParam.rmax/SetParam.rdr+1)); % depth from source to receiver (per rdr)
%             % Run gbm.exe
%             copyfile([path_func 'Gbm.exe'],[path_outputAz, '/' ,subfolderName])
%             copyfile([path_func 'gbm.sh'],[path_outputAz, '/' ,subfolderName])
%             GenInFile(SetParam,SSP,'false',pwd)
%             system(['sh gbm.sh']);
%             copyfile TL.OUT TL1km.OUT
%             copyfile TL.GRID TL1km.GRID
%             delete Gbm.exe gbm.sh Gbm.in TL.OUT TL.GRID TRACE.OUT SSP_INPUT.IN PQ.OUT KNOTS.OUT CHECK.SSP BATHY.OUT
%             
%             SetParam.depth = tempDepth;
            %% Get TL data at each zr
            TL = load('TL5km.GRID');
            TLreshape = reshape(TL(:,5),[SetParam.cz2-SetParam.cz1+1 SetParam.rmax/SetParam.cdr]);
%             TL1km = load('TL1km.GRID');
%             TL1kmreshape = reshape(TL1km(:,5),[SetParam.cz2-SetParam.cz1+1 SetParam.rmax/SetParam.cdr]);
            
            
            TLbottom = interp2(1:length(TLreshape),SetParam.cz1:1:SetParam.cz2,TLreshape,1:length(TLreshape),SetParam.depth(2:end))
            zSquare = (SetParam.depth-SetParam.zs).^2;
            sSquare = ones(SetParam.rmax/SetParam.cdr+1,1).*([0:SetParam.cdr:SetParam.rmax]').^2;
            distanceFromSource2Receiver = sqrt(zSquare+sSquare');
            
            switch SetParam.fre
                case 8800
                    absorptionCoeff = 0.6/1000*0.9144;
                    NL = 68;
                case 37500
                    absorptionCoeff = 10/1000*0.9144;
                    NL = 60;
            end
            
            % PD setup
            
            
            TLName = ['TL',num2str(SetParam.zr),'m'];
            if distanceFromSource2Receiver(1) >1000
                TL0 = 30+10*log10(distanceFromSource2Receiver(1));
            elseif distanceFromSource2Receiver(1) <= 1000
                TL0 = 20*log10(distanceFromSource2Receiver(1));
            end
            eval([TLName,'=','[TL0 TLbottom]',';']);
            absroption = absorptionCoeff*distanceFromSource2Receiver;
            
            TLaName = ['TL',num2str(SetParam.zr),'m_a'];
            eval(['TL_a =', TLName, '+absroption']);
            eval([TLaName,'=TL_a']);
            
            %% Range Average
            
            alpha = SetParam.bandwidth/SetParam.fre;
            rForTLGRID = 0:SetParam.cdr:SetParam.rmax;
            windowWidth = round(rForTLGRID.*alpha/SetParam.cdr/2,0); % Window width from 500 to 4500
            StartRangeIndex = min(find(windowWidth==1));
            if isempty(StartRangeIndex) ==0
                EndRangeIndex = length(rForTLGRID)-windowWidth(end);
                
                pressureTL = sqrt(10.^(TL_a./10));
                TLra = nan(1,length(rForTLGRID));
                for iw =StartRangeIndex:EndRangeIndex
                    meanP = mean(pressureTL(iw-windowWidth(iw):iw+windowWidth(iw)));
                    TLra(iw) = 20*log10(meanP);
                end
                
                TLraName = ['TL',num2str(SetParam.zr),'m_ra'];
                TLra(1:StartRangeIndex-1) = TL_a((1:StartRangeIndex-1));
                eval([TLraName,'=','TLra']);
            else
                TLraName = ['TL',num2str(SetParam.zr),'m_ra'];
                TLra = TL_a;
                eval([TLraName,'=',TLaName]);
            end
            %         plot(TL_a);hold on;plot(TLra)
            %         colormap(jet)
            
            %% PD
            SE = SL - TLra - NL;
            x = -50:0.1:50;
            pd = makedist('Normal','mu',0,'sigma',10);
            y = cdf(pd,x);
            PD = interp1(x,y,SE,'linear','extrap')
            eval(['PD',num2str(SetParam.zr),'m=','PD'])
            eval(['PD',num2str(SetParam.zr),'mAz(', num2str(iaz),',:)=PD',num2str(SetParam.zr),'m(1,:)'])
            eval(['TL',num2str(SetParam.zr),'mraAz(', num2str(iaz),',:)=TL',num2str(SetParam.zr),'m_ra(1,:)'])
            
            
            save TLandPD.mat TL*m TL*m_a TL*m_ra PD*m
            
            cd ../
            
        end
        save TLraPDra.mat PD*mAz TL*mraAz
        
        %% TL Plot
        load('TLraPDra.mat')
        %     lat = load('22.08_121.2_16dir_lat.txt')
        %     lon = load('22.08_121.2_16dir_lon.txt')
        eval(['TLdata = TL',num2str(SetParam.zr),'mraAz']);
        f1 = figure(1);
        surf([coordLon;coordLon(1,:)],[coordLat; coordLat(1,:)],[TLdata; TLdata(1,:)],'LineStyle','none','FaceColor','interp')
        colormap(flipud(jet))
        view(2);axis equal
        c = colorbar
        caxis([50 120])
        c.Label.String = 'Transmission Loss (dB re 1μPa)'
        c.Label.Rotation = 90
        xlabel = ('Longitude (˚E)');
        ylabel = ('Latitude (˚N)');
        title({['Tansmission Loss at (',num2str(Source(2)),'˚N, ',num2str(Source(1)),'˚E)'], ['Depth = ',num2str(SetParam.zs),'m']})
        saveas(f1,['TL',num2str(SetParam.zr),'m.jpg'])
        
        %% PD Plot
        eval(['PDdata = PD',num2str(SetParam.zr),'mAz']);
        f2 = figure(2)
        surf([coordLon;coordLon(1,:)],[coordLat; coordLat(1,:)],[PDdata; PDdata(1,:)],'LineStyle','none','FaceColor','interp')
        pdmap = [1:-0.02:0;zeros(1,51);0:0.02:1]'
        colormap(jet)
        view(2);axis equal
        c = colorbar
        caxis([0 1])
        c.Label.String = 'Predictive Probability of Detection'
        c.Label.Rotation = 90
        xlabel = ('Longitude (˚E)');
        ylabel = ('Latitude (˚N)');
        title({['Predictive Probability of Detection at (',num2str(Source(2)),'˚N, ',num2str(Source(1)),'˚E)'], ['Depth = ',num2str(SetParam.zs),'m']})
        saveas(f2,['PD',num2str(zrDepth),'m.jpg'])
        
        %% PD plot (gray)
        f3 = figure(3)
        p = pcolor([coordLon; coordLon(1,:)],[coordLat;coordLat(1,:)],[PDdata;PDdata(1,:)]);
        p.Annotation.LegendInformation.IconDisplayStyle = 'off';
        p.EdgeColor = 'none';
        p.FaceColor = 'interp';
        axis equal
        colormap(flipud(gray))
        caxis([0 1])
        xlim([guessPoint(1)-0.045 guessPoint(1)+0.045 ])
        ylim([guessPoint(2)-0.045 guessPoint(2)+0.045 ])

        axis on
        xticks([])
        yticks([])
%         set (gca,'position',[0 0 1 1] );
        set(gcf,'position',[100 100 400 400])
        set(gcf,'paperposition',[0 0 1 1]);
        exportgraphics(gca,['PD',num2str(zrDepth),'mGray.png'])
  
        
    end
    
end



